service: account
frameworkVersion: "2"

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  stage: test
  region: ap-northeast-2

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"
    GatewayResponseDefault5XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: "ApiGatewayRestApi"

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get
          cors: true
  login:
    handler: handler.login_or_regist
    events:
      - http:
          path: account/login
          method: post
          cors: true

  logout:
    handler: handler.logout
    events:
      - http:
          path: account/logout
          method: post
          cors: true

  add_emoji:
    handler: handler.add_emoji
    events:
      - http:
          path: emoji
          method: post
          cors: true
  remove_emoji:
    handler: handler.remove_emoji
    events:
      - http:
          path: emoji
          method: delete
          cors: true
plugins:
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-python-requirements
custom:
  pythonRequirements:
    dockerizePip: true
